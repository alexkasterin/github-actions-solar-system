name: Solar System Workflow

on: 
  workflow_dispatch:
  push:
    branches:
      - main
      - 'feature/*'
    
env:
  MONGO_URI: "mongodb+srv://supercluster.d83jj.mongodb.net/superData"
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
    unit-testing:
        name: Unit Testing
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4

        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 20
  
        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
            
        - name: Install Dependencies
          run: npm install
    
        - name: Unit Testing
          run: npm test
          
        - name: Archive Test Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Mocha-Test-Result
            path: test-results.xml
    
    code-coverage:
        name: Code Coverage
        runs-on: ubuntu-latest
        steps:
        - name: Checkout Repository
          uses: actions/checkout@v4
        
        - name: Setup NodeJS Version
          uses: actions/setup-node@v4
          with:
            node-version: 18

        - name: Cache NPM dependencies
          uses: actions/cache@v3
          with:
            path: node_modules
            key: ${{ runner.os }}-node-modules-${{ hashFiles('package-lock.json') }}
  
        - name: Install Dependencies
          run: npm install
        
        - name: Code Coverage Execution
          run: npm run coverage
          continue-on-error: true
        
        - name: Archive Code Coverage Result
          if: always()
          uses: actions/upload-artifact@v4
          with:
            name: Code-Coverage-Result
            path: coverage
            retention-days: 5

    docker:
      name: Containerization
      runs-on: ubuntu-latest
      needs: [unit-testing, code-coverage]
      permissions:
        packages: write
      steps:
      - name: Checkout repository
        uses: actions/checkout@v4
    
      - name: GHCR Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
    
      - name: Docker Build for Testing
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: false
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
    
      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000 \
            -e MONGO_URL=$MONGO_URL \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
    
          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo "Container IP: $IP"
    
          echo Testing Image URL using wget
          wget -q -O - 127.0.0.1:3000/live | grep live
    #      wget -q -O - http://$IP:3000/live | grep live
    
      - name: Container Registry Push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/solar-system:${{ github.sha }}
